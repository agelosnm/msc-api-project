version: '3.8'

services:
  mysql:
    container_name: 'mysql'
    restart: unless-stopped
    image: mysql:8.0.33
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - '3306:3306'
    env_file: .env

  neo4j:
    container_name: 'neo4j'
    restart: unless-stopped
    image: neo4j:5.15.0
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
    ports:
      - '7474:7474'
      - '7687:7687'
    env_file: .env

  mongo:
    container_name: 'mongo'
    restart: unless-stopped
    image: 'mongo:7.0.5'
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - '27017:27017'    
    env_file: .env
    command: [--auth]
    
  kafka:
    container_name: 'kafka'
    restart: unless-stopped
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka

  zookeeper:
    container_name: 'zookeeper'
    restart: unless-stopped
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

volumes:
  mysql_data:
  mongo_data:
  neo4j_data: